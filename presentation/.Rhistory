tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
library(tidyverse)
library(tidyverse)
library(kableExtra)
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
saveRDS(BD_ModDR,"BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
head(BD_ModDR)
# Libraries
library(sf)
BD_ModDR$LONG <- as.numeric(gsub(",", ".", BD_ModDR$LONG))
BD_ModDR$LAT  <- as.numeric(gsub(",", ".", BD_ModDR$LAT))
head(BD_ModDR)
BD <- st_as_sf(BD, coords = c("LONG", "LAT"),crs = 4326)
BD <- st_as_sf(BD_ModDR, coords = c("LONG", "LAT"),crs = 4326)
UTAM <- st_read("H:/My Drive/Encuesta de Movilidad 2019_SUR/ZONAS/UTAM.shp")
UTAM <- st_transform(UTAM,crs = 4326)
zones <- unique(UTAM$UTAM)
View(UTAM)
UTAM2 <- UTAM %>% Filter(UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"))
UTAM2 <- UTAM %>% Filter(UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"))
UTAM2 <- UTAM %>% Filter(UTAM$UTAM %in% c("UPR1","UPR2","UPR3","UPR4","UPR5"))
UTAM2 <- UTAM[UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"),]
`%notin%` <- Negate(`%in%`)
UTAM2 <- UTAM[UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"),]
table((UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"))&
UTAM$MUNNombre=="BOGOTA")
UTAM2 <- UTAM[(UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5"))&
UTAM$MUNNombre=="BOGOTA",]
plot(UTAM2)["MUNNombre"]
BD_ModDR <- readRDS("BD_ModDR.rds")
BD_ModDR$LONG <- as.numeric(gsub(",", ".", BD_ModDR$LONG))
BD_ModDR$LAT  <- as.numeric(gsub(",", ".", BD_ModDR$LAT))
BD <- st_as_sf(BD_ModDR, coords = c("LONG", "LAT"),crs = 4326)
UTAM <- st_read("H:/My Drive/Encuesta de Movilidad 2019_SUR/ZONAS/UTAM.shp")
UTAM <- st_transform(UTAM,crs = 4326)
UTAM <- UTAM[UTAM$MUNNombre=="BOGOTA" &
(UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5")),]
zones <- unique(UTAM$UTAM)
`%notin%` <- Negate(`%in%`)
UTAM <- UTAM[UTAM$MUNNombre=="BOGOTA" &
(UTAM$UTAM %notin% c("UPR1","UPR2","UPR3","UPR4","UPR5")),]
zones <- unique(UTAM$UTAM)
BD <- st_intersection(BD,UTAM[,"UTAM"])
saveRDS(BD,"BD_geo.rds")
GENDER     <- unique(BD$GENDER)
OCCUPATION <- unique(BD$OCCUPATION)
MODE_T     <- unique(BD$MODE_T)
map_data <- BD %>%
st_drop_geometry() %>%
group_by(UTAM,GENDER,OCCUPATION,MODE_T) %>%
summarise("dist"= mean(DISTANCE))
map <- crossing(zones,GENDER,OCCUPATION,MODE_T)
View(map_data)
map <- merge(map,map_data,
by.x = c("zones","GENDER","OCCUPATION","MODE_T"),
by.y = c("UTAM", "GENDER","OCCUPATION","MODE_T"),
all.x = T)
View(map)
alter_dist <- BD %>%
st_drop_geometry() %>%
group_by(MODE_T) %>%
summarise("dist"= mean(DISTANCE))
View(alter_dist)
View(map)
map <- merge(map,alter_dist,
by = "MODE_T",
all.x = T)
View(map)
map$DISTANCE <- ifelse(is.na(map$dist.x),map$dist.y,map$dist.x)
map <- map %>%
mutate(dist.x=NULL,
dist.y=NULL)
View(map)
names(map)
map <- merge(map,UTAM[,"UTAM"],
by.x = "zones",
by.y = "UTAM",
all.x = T)
View(map)
saveRDS(map,"map.rds")
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(tidyverse)
library(kableExtra)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
ggplot(BD_ModDR,
aes(x=MODE_T,y=DISTANCE))+
geom_boxplot()+
xlab("Transportation mode")+
ylab("Distance (Km)")
options(scipen = 999)
summary(model <- lm(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = BD_ModDR))
options(scipen = 999, digits = 3)
summary(model <- lm(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = BD_ModDR))
saveRDS(model,"model1.rds")
shiny::runApp('H:/My Drive/2022 2/DS/project/app')
all_modzcta <- readRDS("H:/My Drive/2022 2/DS/project/app/map.rds")
all_modzcta$DISTANCE <- round(all_modzcta$DISTANCE,3)
head(all_modzcta$DISTANCE)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(tidyverse)
library(kableExtra)
library(randomForest)
library(MASS)
BD_ModDR <- readRDS("BD_ModDR.rds")
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR[s_train,] %>%
select(DISTANCE:EntScore)
train  <-  BD_ModDR %>%
slice(s_train)
y_test <- BD_ModDR[-s_train, "DISTANCE"]
hist(y_test,breaks = 100)
summary(model <- lm(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
BD_ModDR$DISTANCEF <-cut(BD_ModDR$DISTANCE)
BD_ModDR$DISTANCEF <-cut(BD_ModDR$DISTANCE,4)
table(BD_ModDR$DISTANCE)
table(BD_ModDR$DISTANCEF)
BD_ModDR$DISTANCEF <-cut(BD_ModDR$DISTANCE,5)
table(BD_ModDR$DISTANCEF)
BD_ModDR <- readRDS("BD_ModDR.rds")
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
BD_ModDR %>% select(DISTANCE:EntScore)
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
names(BD_ModDR)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
options(scipen = 999, digits = 3)
BD_ModDR <- readRDS("BD_ModDR.rds")
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
y_test <- BD_ModDR[-s_train, "DISTANCE"]
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5)) %>%
slice(s_train)
head(train)
str(train$DISTANCE)
levels(train$DISTANCE)
summary(model <- polr(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
summary(model <- polr(DISTANCE ~ GENDER + (AGE/10) + I((AGE/10)^2) + OCCUPATION + INCOME + MODE_T + (EntScore*10),
data = train))
summary(model <- polr(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
summary(model <- polr(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
model2 <- readRDS("model2.rds")
summary(model2)
model2
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
summary(model <- lm(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
summary(model <- lm(as.numeric(DISTANCE) ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
options(scipen = 999, digits = 3)
BD_ModDR <- readRDS("BD_ModDR.rds")
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
options(scipen = 999, digits = 3)
BD_ModDR <- readRDS("BD_ModDR.rds")
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
y_test <- BD_ModDR[-s_train, "DISTANCE"]
summary(model <- lm(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
#saveRDS(model,"model1.rds")
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
summary(model <- polr(DISTANCE ~ GENDER + AGE + I(AGE^2) + OCCUPATION + INCOME + MODE_T + EntScore,
data = train))
test  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(-s_train)
yhat_test <- predict(model, newdata = test)
yhat_test
model <- readRDS("model2.rds")
model
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
model <- readRDS("model2.rds")
model
varImpPlot(model)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
mode1 <- readRDS("model1.rds")
summary(model1)
summary(model1)
model1 <- readRDS("model1.rds")
summary(model1)
rm(mode1)
model2 <- readRDS("model2.rds")
model2
varImpPlot(model2)
model3 <- readRDS("model3.rds")
summary(model3)
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
options(scipen = 100, digits = 3)
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
model3 <- readRDS("model3.rds")
summary(model3)
model3.null <- readRDS("model3.rds")
model3.null <- readRDS("model3_null.rds")
R2 <- 1-(model3$deviance/model3.null$deviance)
y_train_1    <- BD_ModDR[s_train, "DISTANCE"]
yhat_train_1 <- predict(model1, newdata = BD_ModDR[s_train , ])
rm(y_train_1)
y_train      <- BD_ModDR[s_train, "DISTANCE"]
R2_train_1 <- 1 - sum((y_train-yhat_train_1)^2)/sum((y_train-mean(y_train))^2)
yhat_test_1 <- predict(model1, newdata = BD_ModDR[-s_train , ])
y_test  <- BD_ModDR[-s_train, "DISTANCE"]
R2_test_1 <- 1 - sum((y_test-yhat_test_1)^2)/sum((y_test-mean(y_test))^2)
yhat_train_2 <- predict(model2, newdata = BD_ModDR[s_train , ])
R2_train_2 <- 1 - sum((y_train-yhat_train_2)^2)/sum((y_train-mean(y_train))^2)
yhat_test_2 <- predict(model2, newdata = BD_ModDR[-s_train , ])
R2_test_2 <- 1 - sum((y_test-yhat_test_2)^2)/sum((y_test-mean(y_test))^2)
rm(R2)
tb_results <- data.frame(
Model = c("linear regression", "random forest", "ordered logit"),
Train = c(R2_train_1, R2_train_2, R2_train_3),
Test  = c(R2_test_1,  R2_test_2,  R2_test_3)
)
R2_train_3 <- 1 - (model3$deviance/model3.null$deviance)
tb_results <- data.frame(
Model = c("linear regression", "random forest", "ordered logit"),
Train = c(R2_train_1, R2_train_2, R2_train_3),
Test  = c(R2_test_1,  R2_test_2,  NA)
)
View(tb_results)
tb_results %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F)
tb_results %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = T)
tb_results %>%
kbl() %>%
kable_material(c("striped"),full_width = T)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
options(scipen = 100, digits = 3)
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
model <- randomForest(DISTANCE ~ ., data = train , mtry = 4, ntree = 50 , importance = TRUE) #
saveRDS(model,"model2.1.rds")
model <- randomForest(DISTANCE ~ ., data = train , mtry = 4, ntree = 250 , importance = TRUE) #
saveRDS(model,"model2.2.rds")
model
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.align = "center")
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
options(scipen = 100, digits = 3)
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
y_train <- BD_ModDR[s_train, "DISTANCE"]
y_test  <- BD_ModDR[-s_train, "DISTANCE"]
indicator <- function(model){
yhat_train <- predict(model, newdata = BD_ModDR[s_train , ])
yhat_test  <- predict(model, newdata = BD_ModDR[-s_train , ])
R2_train <- 1 - sum((y_train-yhat_train)^2)/sum((y_train-mean(y_train))^2)
R2_test  <- 1 - sum((y_test -yhat_test)^2) /sum((y_test -mean(y_test))^2)
res <- c(R2_train,R2_test)
return(res)
}
model2.2 <- readRDS("model2.2.rds")
model2.2
varImpPlot(model2.2)
RF2.2 <- indicator(model2.2)
tb_results <- data.frame(
linear_regression = RF2.2,
random_forest     = RF2.2
)
View(tb_results)
tb_results <- data.frame(
set = c("train","test")
linear_regression = RF2.2,
tb_results <- data.frame(
set = c("train","test"),
linear_regression = RF2.2,
random_forest     = RF2.2
)
View(tb_results)
tb_results %>%
kbl() %>%
kable_material(c("striped"),full_width = T)
View(tb_results)
R2_train<-12.62
OL <- c(R2_train, NA)
Ordered_Logistic <- c(R2_train, NA)
tb_results <-  cbind(tb_results,Ordered_Logistic)
View(tb_results)
Ordered_Logistic1 <- as.numeric(c(R2_train, NA))
tb_results <-  cbind(tb_results,Ordered_Logistic1)
View(tb_results)
tb_results %>%
kbl() %>%
kable_material(c("striped"),full_width = T)
# Libraries
library(kableExtra)
library(randomForest)
library(MASS)
library(tidyverse)
BD_ModDR <- readRDS("BD_ModDR.rds")
tb <- summary(BD_ModDR %>% select(DISTANCE:EntScore))
tb[is.na(tb)]<-""
tb %>%
kbl() %>%
kable_material(c("striped", "condensed"),full_width = F) %>%
kable_styling()%>%
scroll_box(width = "905px", height = "455px")
options(scipen = 100, digits = 3)
set.seed (1)
s_train<- sample(1: nrow(BD_ModDR), nrow(BD_ModDR)*0.8)
train  <-  BD_ModDR %>%
slice(s_train) %>%
select(DISTANCE:EntScore)
model1 <- readRDS("model1.rds")
summary(model1)
model2.1 <- readRDS("model2.1.rds")
model2.2 <- readRDS("model2.2.rds")
model2.3 <- readRDS("model2.3.rds")
model2.2
varImpPlot(model2.2)
train  <-  BD_ModDR %>%
select(DISTANCE:EntScore) %>%
mutate(DISTANCE = cut(DISTANCE,5),
AGE      = AGE/10,
EntScore = EntScore*10) %>%
slice(s_train)
model3 <- readRDS("model3.rds")
summary(model3)
y_train <- BD_ModDR[s_train, "DISTANCE"]
y_test  <- BD_ModDR[-s_train, "DISTANCE"]
indicator <- function(model){
yhat_train <- predict(model, newdata = BD_ModDR[s_train , ])
yhat_test  <- predict(model, newdata = BD_ModDR[-s_train , ])
R2_train <- 1 - sum((y_train - yhat_train)^2)/sum((y_train - mean(y_train))^2)
R2_test  <- 1 - sum((y_test  - yhat_test)^2) /sum((y_test  - mean(y_test))^2)
res <- c(R2_train,R2_test)
return(res)
}
LM <- indicator(model1)
RF2.1 <- indicator(model2.1)
RF2.2 <- indicator(model2.2)
RF2.3 <- indicator(model2.3)
tb_results <- data.frame(
set = c("train","test"),
linear_regression = LM,
random_forest_50  = RF2.1,
random_forest_250 = RF2.2,
random_forest_500 = RF2.3,
)
tb_results <- data.frame(
set = c("train","test"),
"linear regression" = LM,
random_forest_50  = RF2.1,
random_forest_250 = RF2.2,
random_forest_500 = RF2.3,
)
tb_results <- data.frame(
data_set = c("train","test"),
linear_regression = LM,
random_forest_50  = RF2.1,
random_forest_250 = RF2.2,
random_forest_500 = RF2.3,
)
shiny::runApp('H:/My Drive/2022 2/DS/project/app')
